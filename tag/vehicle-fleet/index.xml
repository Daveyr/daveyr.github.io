<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vehicle fleet | Algorist</title>
    <link>/tag/vehicle-fleet/</link>
      <atom:link href="/tag/vehicle-fleet/index.xml" rel="self" type="application/rss+xml" />
    <description>Vehicle fleet</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-gb</language><lastBuildDate>Mon, 17 Aug 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Vehicle fleet</title>
      <link>/tag/vehicle-fleet/</link>
    </image>
    
    <item>
      <title>How to write API packages for R</title>
      <link>/post/how-to-write-api-packages-for-r/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/how-to-write-api-packages-for-r/</guid>
      <description>


&lt;div id=&#34;overview&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Overview&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;installation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;DVLA&lt;/code&gt; is not yet on CRAN. To install, simply run the following in R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;daveyr/DVLA&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;usage&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Usage&lt;/h1&gt;
&lt;p&gt;Documentation on functions and examples can be found on its &lt;a href=&#34;https://daveyr.github.io/DVLA/&#34;&gt;Github page&lt;/a&gt;. Hereâ€™s a more involved example, where we loop through a vector of car registration numbers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# DVLA API in action
# 
# library(DVLA)
#  i &amp;lt;- 1
#  dvla &amp;lt;- NULL
#  for(reg in unique(fleet$reg)){
#    df &amp;lt;- getDVLA(key, reg)
#    dvla &amp;lt;- rbindlist(list(dvla,df), fill = T)
#    i &amp;lt;- i + 1
#    Sys.sleep(0.2) # avoid rate limits
#  }
#  
#  complete &amp;lt;- fleet %&amp;gt;%
#   left_join(dvla, by = c(&amp;quot;reg&amp;quot; = &amp;quot;registrationNumber&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;backend&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Backend&lt;/h1&gt;
&lt;p&gt;So what is happening behind the scenes? How would one go about replicating this type of package for another API?&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>DVLA</title>
      <link>/project/dvla/</link>
      <pubDate>Sun, 26 Jul 2020 23:14:11 +0100</pubDate>
      <guid>/project/dvla/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
